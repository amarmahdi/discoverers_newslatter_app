# Generated by Django 4.2.10 on 2025-05-29 20:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('subtitle', models.CharField(blank=True, max_length=200, verbose_name='subtitle')),
                ('content', models.TextField(verbose_name='content')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='newsletter_covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=10, verbose_name='status')),
                ('featured', models.BooleanField(default=False, verbose_name='featured')),
                ('sent_to_all', models.BooleanField(default=False, verbose_name='sent to all')),
                ('categories', models.ManyToManyField(blank=True, related_name='newsletters', to='newsletter.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_newsletters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'newsletter',
                'verbose_name_plural': 'newsletters',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='location')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('categories', models.ManyToManyField(blank=True, related_name='events', to='newsletter.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('newsletters', models.ManyToManyField(blank=True, related_name='events', to='newsletter.newsletter')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('content', models.TextField(verbose_name='content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='expiry date')),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10, verbose_name='priority')),
                ('image', models.ImageField(blank=True, null=True, upload_to='announcement_images/')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('categories', models.ManyToManyField(blank=True, related_name='announcements', to='newsletter.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'announcement',
                'verbose_name_plural': 'announcements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_subscribed', models.BooleanField(default=True, verbose_name='is subscribed')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, verbose_name='subscribed at')),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True, verbose_name='unsubscribed at')),
                ('groups', models.ManyToManyField(blank=True, related_name='subscribers', to='newsletter.subscriptiongroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='NewsletterRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='sent at')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='opened at')),
                ('clicked', models.BooleanField(default=False, verbose_name='clicked')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='newsletter.newsletter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_newsletters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'newsletter recipient',
                'verbose_name_plural': 'newsletter recipients',
                'unique_together': {('newsletter', 'user')},
            },
        ),
    ]
